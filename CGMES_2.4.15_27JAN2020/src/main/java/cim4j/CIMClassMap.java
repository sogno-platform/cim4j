package cim4j;
import java.util.Map;
import java.util.Arrays;
import static java.util.Map.entry;
import cim4j.*;
public class CIMClassMap {
    public static boolean isCIMClass(java.lang.String key) {
        return classMap.containsKey(key);
    }
    public static Map<java.lang.String, BaseClass> classMap = Map.ofEntries(
        Map.entry("ACDCConverter", new cim4j.ACDCConverter()),
        Map.entry("ACDCConverterDCTerminal", new cim4j.ACDCConverterDCTerminal()),
        Map.entry("ACDCTerminal", new cim4j.ACDCTerminal()),
        Map.entry("ACLineSegment", new cim4j.ACLineSegment()),
        Map.entry("Accumulator", new cim4j.Accumulator()),
        Map.entry("AccumulatorLimit", new cim4j.AccumulatorLimit()),
        Map.entry("AccumulatorLimitSet", new cim4j.AccumulatorLimitSet()),
        Map.entry("AccumulatorReset", new cim4j.AccumulatorReset()),
        Map.entry("AccumulatorValue", new cim4j.AccumulatorValue()),
        Map.entry("ActivePower", new cim4j.ActivePower()),
        Map.entry("ActivePowerLimit", new cim4j.ActivePowerLimit()),
        Map.entry("ActivePowerPerCurrentFlow", new cim4j.ActivePowerPerCurrentFlow()),
        Map.entry("ActivePowerPerFrequency", new cim4j.ActivePowerPerFrequency()),
        Map.entry("Analog", new cim4j.Analog()),
        Map.entry("AnalogControl", new cim4j.AnalogControl()),
        Map.entry("AnalogLimit", new cim4j.AnalogLimit()),
        Map.entry("AnalogLimitSet", new cim4j.AnalogLimitSet()),
        Map.entry("AnalogValue", new cim4j.AnalogValue()),
        Map.entry("AngleDegrees", new cim4j.AngleDegrees()),
        Map.entry("AngleRadians", new cim4j.AngleRadians()),
        Map.entry("ApparentPower", new cim4j.ApparentPower()),
        Map.entry("ApparentPowerLimit", new cim4j.ApparentPowerLimit()),
        Map.entry("Area", new cim4j.Area()),
        Map.entry("AsynchronousMachine", new cim4j.AsynchronousMachine()),
        Map.entry("AsynchronousMachineDynamics", new cim4j.AsynchronousMachineDynamics()),
        Map.entry("AsynchronousMachineEquivalentCircuit", new cim4j.AsynchronousMachineEquivalentCircuit()),
        Map.entry("AsynchronousMachineKind", new cim4j.AsynchronousMachineKind()),
        Map.entry("AsynchronousMachineTimeConstantReactance", new cim4j.AsynchronousMachineTimeConstantReactance()),
        Map.entry("AsynchronousMachineUserDefined", new cim4j.AsynchronousMachineUserDefined()),
        Map.entry("BaseVoltage", new cim4j.BaseVoltage()),
        Map.entry("BasicIntervalSchedule", new cim4j.BasicIntervalSchedule()),
        Map.entry("Bay", new cim4j.Bay()),
        Map.entry("Boolean", new cim4j.Boolean()),
        Map.entry("Breaker", new cim4j.Breaker()),
        Map.entry("BusNameMarker", new cim4j.BusNameMarker()),
        Map.entry("BusbarSection", new cim4j.BusbarSection()),
        Map.entry("Capacitance", new cim4j.Capacitance()),
        Map.entry("CapacitancePerLength", new cim4j.CapacitancePerLength()),
        Map.entry("Command", new cim4j.Command()),
        Map.entry("Conductance", new cim4j.Conductance()),
        Map.entry("ConductingEquipment", new cim4j.ConductingEquipment()),
        Map.entry("Conductor", new cim4j.Conductor()),
        Map.entry("ConformLoad", new cim4j.ConformLoad()),
        Map.entry("ConformLoadGroup", new cim4j.ConformLoadGroup()),
        Map.entry("ConformLoadSchedule", new cim4j.ConformLoadSchedule()),
        Map.entry("ConnectivityNode", new cim4j.ConnectivityNode()),
        Map.entry("ConnectivityNodeContainer", new cim4j.ConnectivityNodeContainer()),
        Map.entry("Connector", new cim4j.Connector()),
        Map.entry("Control", new cim4j.Control()),
        Map.entry("ControlArea", new cim4j.ControlArea()),
        Map.entry("ControlAreaGeneratingUnit", new cim4j.ControlAreaGeneratingUnit()),
        Map.entry("ControlAreaTypeKind", new cim4j.ControlAreaTypeKind()),
        Map.entry("CoordinateSystem", new cim4j.CoordinateSystem()),
        Map.entry("CsConverter", new cim4j.CsConverter()),
        Map.entry("CsOperatingModeKind", new cim4j.CsOperatingModeKind()),
        Map.entry("CsPpccControlKind", new cim4j.CsPpccControlKind()),
        Map.entry("Currency", new cim4j.Currency()),
        Map.entry("CurrentFlow", new cim4j.CurrentFlow()),
        Map.entry("CurrentLimit", new cim4j.CurrentLimit()),
        Map.entry("Curve", new cim4j.Curve()),
        Map.entry("CurveData", new cim4j.CurveData()),
        Map.entry("CurveStyle", new cim4j.CurveStyle()),
        Map.entry("DCBaseTerminal", new cim4j.DCBaseTerminal()),
        Map.entry("DCBreaker", new cim4j.DCBreaker()),
        Map.entry("DCBusbar", new cim4j.DCBusbar()),
        Map.entry("DCChopper", new cim4j.DCChopper()),
        Map.entry("DCConductingEquipment", new cim4j.DCConductingEquipment()),
        Map.entry("DCConverterOperatingModeKind", new cim4j.DCConverterOperatingModeKind()),
        Map.entry("DCConverterUnit", new cim4j.DCConverterUnit()),
        Map.entry("DCDisconnector", new cim4j.DCDisconnector()),
        Map.entry("DCEquipmentContainer", new cim4j.DCEquipmentContainer()),
        Map.entry("DCGround", new cim4j.DCGround()),
        Map.entry("DCLine", new cim4j.DCLine()),
        Map.entry("DCLineSegment", new cim4j.DCLineSegment()),
        Map.entry("DCNode", new cim4j.DCNode()),
        Map.entry("DCPolarityKind", new cim4j.DCPolarityKind()),
        Map.entry("DCSeriesDevice", new cim4j.DCSeriesDevice()),
        Map.entry("DCShunt", new cim4j.DCShunt()),
        Map.entry("DCSwitch", new cim4j.DCSwitch()),
        Map.entry("DCTerminal", new cim4j.DCTerminal()),
        Map.entry("DCTopologicalIsland", new cim4j.DCTopologicalIsland()),
        Map.entry("DCTopologicalNode", new cim4j.DCTopologicalNode()),
        Map.entry("Date", new cim4j.Date()),
        Map.entry("DateTime", new cim4j.DateTime()),
        Map.entry("DayType", new cim4j.DayType()),
        Map.entry("Decimal", new cim4j.Decimal()),
        Map.entry("Diagram", new cim4j.Diagram()),
        Map.entry("DiagramLayoutVersion", new cim4j.DiagramLayoutVersion()),
        Map.entry("DiagramObject", new cim4j.DiagramObject()),
        Map.entry("DiagramObjectGluePoint", new cim4j.DiagramObjectGluePoint()),
        Map.entry("DiagramObjectPoint", new cim4j.DiagramObjectPoint()),
        Map.entry("DiagramObjectStyle", new cim4j.DiagramObjectStyle()),
        Map.entry("DiagramStyle", new cim4j.DiagramStyle()),
        Map.entry("DiscExcContIEEEDEC1A", new cim4j.DiscExcContIEEEDEC1A()),
        Map.entry("DiscExcContIEEEDEC2A", new cim4j.DiscExcContIEEEDEC2A()),
        Map.entry("DiscExcContIEEEDEC3A", new cim4j.DiscExcContIEEEDEC3A()),
        Map.entry("Disconnector", new cim4j.Disconnector()),
        Map.entry("DiscontinuousExcitationControlDynamics", new cim4j.DiscontinuousExcitationControlDynamics()),
        Map.entry("DiscontinuousExcitationControlUserDefined", new cim4j.DiscontinuousExcitationControlUserDefined()),
        Map.entry("Discrete", new cim4j.Discrete()),
        Map.entry("DiscreteValue", new cim4j.DiscreteValue()),
        Map.entry("DroopSignalFeedbackKind", new cim4j.DroopSignalFeedbackKind()),
        Map.entry("DynamicsFunctionBlock", new cim4j.DynamicsFunctionBlock()),
        Map.entry("DynamicsVersion", new cim4j.DynamicsVersion()),
        Map.entry("EarthFaultCompensator", new cim4j.EarthFaultCompensator()),
        Map.entry("EnergyArea", new cim4j.EnergyArea()),
        Map.entry("EnergyConsumer", new cim4j.EnergyConsumer()),
        Map.entry("EnergySchedulingType", new cim4j.EnergySchedulingType()),
        Map.entry("EnergySource", new cim4j.EnergySource()),
        Map.entry("Equipment", new cim4j.Equipment()),
        Map.entry("EquipmentBoundaryVersion", new cim4j.EquipmentBoundaryVersion()),
        Map.entry("EquipmentContainer", new cim4j.EquipmentContainer()),
        Map.entry("EquipmentVersion", new cim4j.EquipmentVersion()),
        Map.entry("EquivalentBranch", new cim4j.EquivalentBranch()),
        Map.entry("EquivalentEquipment", new cim4j.EquivalentEquipment()),
        Map.entry("EquivalentInjection", new cim4j.EquivalentInjection()),
        Map.entry("EquivalentNetwork", new cim4j.EquivalentNetwork()),
        Map.entry("EquivalentShunt", new cim4j.EquivalentShunt()),
        Map.entry("ExcAC1A", new cim4j.ExcAC1A()),
        Map.entry("ExcAC2A", new cim4j.ExcAC2A()),
        Map.entry("ExcAC3A", new cim4j.ExcAC3A()),
        Map.entry("ExcAC4A", new cim4j.ExcAC4A()),
        Map.entry("ExcAC5A", new cim4j.ExcAC5A()),
        Map.entry("ExcAC6A", new cim4j.ExcAC6A()),
        Map.entry("ExcAC8B", new cim4j.ExcAC8B()),
        Map.entry("ExcANS", new cim4j.ExcANS()),
        Map.entry("ExcAVR1", new cim4j.ExcAVR1()),
        Map.entry("ExcAVR2", new cim4j.ExcAVR2()),
        Map.entry("ExcAVR3", new cim4j.ExcAVR3()),
        Map.entry("ExcAVR4", new cim4j.ExcAVR4()),
        Map.entry("ExcAVR5", new cim4j.ExcAVR5()),
        Map.entry("ExcAVR7", new cim4j.ExcAVR7()),
        Map.entry("ExcBBC", new cim4j.ExcBBC()),
        Map.entry("ExcCZ", new cim4j.ExcCZ()),
        Map.entry("ExcDC1A", new cim4j.ExcDC1A()),
        Map.entry("ExcDC2A", new cim4j.ExcDC2A()),
        Map.entry("ExcDC3A", new cim4j.ExcDC3A()),
        Map.entry("ExcDC3A1", new cim4j.ExcDC3A1()),
        Map.entry("ExcELIN1", new cim4j.ExcELIN1()),
        Map.entry("ExcELIN2", new cim4j.ExcELIN2()),
        Map.entry("ExcHU", new cim4j.ExcHU()),
        Map.entry("ExcIEEEAC1A", new cim4j.ExcIEEEAC1A()),
        Map.entry("ExcIEEEAC2A", new cim4j.ExcIEEEAC2A()),
        Map.entry("ExcIEEEAC3A", new cim4j.ExcIEEEAC3A()),
        Map.entry("ExcIEEEAC4A", new cim4j.ExcIEEEAC4A()),
        Map.entry("ExcIEEEAC5A", new cim4j.ExcIEEEAC5A()),
        Map.entry("ExcIEEEAC6A", new cim4j.ExcIEEEAC6A()),
        Map.entry("ExcIEEEAC7B", new cim4j.ExcIEEEAC7B()),
        Map.entry("ExcIEEEAC8B", new cim4j.ExcIEEEAC8B()),
        Map.entry("ExcIEEEDC1A", new cim4j.ExcIEEEDC1A()),
        Map.entry("ExcIEEEDC2A", new cim4j.ExcIEEEDC2A()),
        Map.entry("ExcIEEEDC3A", new cim4j.ExcIEEEDC3A()),
        Map.entry("ExcIEEEDC4B", new cim4j.ExcIEEEDC4B()),
        Map.entry("ExcIEEEST1A", new cim4j.ExcIEEEST1A()),
        Map.entry("ExcIEEEST1AUELselectorKind", new cim4j.ExcIEEEST1AUELselectorKind()),
        Map.entry("ExcIEEEST2A", new cim4j.ExcIEEEST2A()),
        Map.entry("ExcIEEEST3A", new cim4j.ExcIEEEST3A()),
        Map.entry("ExcIEEEST4B", new cim4j.ExcIEEEST4B()),
        Map.entry("ExcIEEEST5B", new cim4j.ExcIEEEST5B()),
        Map.entry("ExcIEEEST6B", new cim4j.ExcIEEEST6B()),
        Map.entry("ExcIEEEST7B", new cim4j.ExcIEEEST7B()),
        Map.entry("ExcOEX3T", new cim4j.ExcOEX3T()),
        Map.entry("ExcPIC", new cim4j.ExcPIC()),
        Map.entry("ExcREXS", new cim4j.ExcREXS()),
        Map.entry("ExcREXSFeedbackSignalKind", new cim4j.ExcREXSFeedbackSignalKind()),
        Map.entry("ExcSCRX", new cim4j.ExcSCRX()),
        Map.entry("ExcSEXS", new cim4j.ExcSEXS()),
        Map.entry("ExcSK", new cim4j.ExcSK()),
        Map.entry("ExcST1A", new cim4j.ExcST1A()),
        Map.entry("ExcST2A", new cim4j.ExcST2A()),
        Map.entry("ExcST3A", new cim4j.ExcST3A()),
        Map.entry("ExcST4B", new cim4j.ExcST4B()),
        Map.entry("ExcST6B", new cim4j.ExcST6B()),
        Map.entry("ExcST6BOELselectorKind", new cim4j.ExcST6BOELselectorKind()),
        Map.entry("ExcST7B", new cim4j.ExcST7B()),
        Map.entry("ExcST7BOELselectorKind", new cim4j.ExcST7BOELselectorKind()),
        Map.entry("ExcST7BUELselectorKind", new cim4j.ExcST7BUELselectorKind()),
        Map.entry("ExcitationSystemDynamics", new cim4j.ExcitationSystemDynamics()),
        Map.entry("ExcitationSystemUserDefined", new cim4j.ExcitationSystemUserDefined()),
        Map.entry("ExternalNetworkInjection", new cim4j.ExternalNetworkInjection()),
        Map.entry("Float", new cim4j.Float()),
        Map.entry("FossilFuel", new cim4j.FossilFuel()),
        Map.entry("FrancisGovernorControlKind", new cim4j.FrancisGovernorControlKind()),
        Map.entry("Frequency", new cim4j.Frequency()),
        Map.entry("FuelType", new cim4j.FuelType()),
        Map.entry("GenICompensationForGenJ", new cim4j.GenICompensationForGenJ()),
        Map.entry("GeneratingUnit", new cim4j.GeneratingUnit()),
        Map.entry("GeneratorControlSource", new cim4j.GeneratorControlSource()),
        Map.entry("GenericNonLinearLoadModelKind", new cim4j.GenericNonLinearLoadModelKind()),
        Map.entry("GeographicalLocationVersion", new cim4j.GeographicalLocationVersion()),
        Map.entry("GeographicalRegion", new cim4j.GeographicalRegion()),
        Map.entry("GovCT1", new cim4j.GovCT1()),
        Map.entry("GovCT2", new cim4j.GovCT2()),
        Map.entry("GovGAST", new cim4j.GovGAST()),
        Map.entry("GovGAST1", new cim4j.GovGAST1()),
        Map.entry("GovGAST2", new cim4j.GovGAST2()),
        Map.entry("GovGAST3", new cim4j.GovGAST3()),
        Map.entry("GovGAST4", new cim4j.GovGAST4()),
        Map.entry("GovGASTWD", new cim4j.GovGASTWD()),
        Map.entry("GovHydro1", new cim4j.GovHydro1()),
        Map.entry("GovHydro2", new cim4j.GovHydro2()),
        Map.entry("GovHydro3", new cim4j.GovHydro3()),
        Map.entry("GovHydro4", new cim4j.GovHydro4()),
        Map.entry("GovHydroDD", new cim4j.GovHydroDD()),
        Map.entry("GovHydroFrancis", new cim4j.GovHydroFrancis()),
        Map.entry("GovHydroIEEE0", new cim4j.GovHydroIEEE0()),
        Map.entry("GovHydroIEEE2", new cim4j.GovHydroIEEE2()),
        Map.entry("GovHydroPID", new cim4j.GovHydroPID()),
        Map.entry("GovHydroPID2", new cim4j.GovHydroPID2()),
        Map.entry("GovHydroPelton", new cim4j.GovHydroPelton()),
        Map.entry("GovHydroR", new cim4j.GovHydroR()),
        Map.entry("GovHydroWEH", new cim4j.GovHydroWEH()),
        Map.entry("GovHydroWPID", new cim4j.GovHydroWPID()),
        Map.entry("GovSteam0", new cim4j.GovSteam0()),
        Map.entry("GovSteam1", new cim4j.GovSteam1()),
        Map.entry("GovSteam2", new cim4j.GovSteam2()),
        Map.entry("GovSteamCC", new cim4j.GovSteamCC()),
        Map.entry("GovSteamEU", new cim4j.GovSteamEU()),
        Map.entry("GovSteamFV2", new cim4j.GovSteamFV2()),
        Map.entry("GovSteamFV3", new cim4j.GovSteamFV3()),
        Map.entry("GovSteamFV4", new cim4j.GovSteamFV4()),
        Map.entry("GovSteamIEEE1", new cim4j.GovSteamIEEE1()),
        Map.entry("GovSteamSGO", new cim4j.GovSteamSGO()),
        Map.entry("GrossToNetActivePowerCurve", new cim4j.GrossToNetActivePowerCurve()),
        Map.entry("Ground", new cim4j.Ground()),
        Map.entry("GroundDisconnector", new cim4j.GroundDisconnector()),
        Map.entry("GroundingImpedance", new cim4j.GroundingImpedance()),
        Map.entry("HydroEnergyConversionKind", new cim4j.HydroEnergyConversionKind()),
        Map.entry("HydroGeneratingUnit", new cim4j.HydroGeneratingUnit()),
        Map.entry("HydroPlantStorageKind", new cim4j.HydroPlantStorageKind()),
        Map.entry("HydroPowerPlant", new cim4j.HydroPowerPlant()),
        Map.entry("HydroPump", new cim4j.HydroPump()),
        Map.entry("IdentifiedObject", new cim4j.IdentifiedObject()),
        Map.entry("IfdBaseKind", new cim4j.IfdBaseKind()),
        Map.entry("Inductance", new cim4j.Inductance()),
        Map.entry("InductancePerLength", new cim4j.InductancePerLength()),
        Map.entry("InputSignalKind", new cim4j.InputSignalKind()),
        Map.entry("Integer", new cim4j.Integer()),
        Map.entry("Junction", new cim4j.Junction()),
        Map.entry("Length", new cim4j.Length()),
        Map.entry("Limit", new cim4j.Limit()),
        Map.entry("LimitSet", new cim4j.LimitSet()),
        Map.entry("LimitTypeKind", new cim4j.LimitTypeKind()),
        Map.entry("Line", new cim4j.Line()),
        Map.entry("LinearShuntCompensator", new cim4j.LinearShuntCompensator()),
        Map.entry("LoadAggregate", new cim4j.LoadAggregate()),
        Map.entry("LoadArea", new cim4j.LoadArea()),
        Map.entry("LoadBreakSwitch", new cim4j.LoadBreakSwitch()),
        Map.entry("LoadComposite", new cim4j.LoadComposite()),
        Map.entry("LoadDynamics", new cim4j.LoadDynamics()),
        Map.entry("LoadGenericNonLinear", new cim4j.LoadGenericNonLinear()),
        Map.entry("LoadGroup", new cim4j.LoadGroup()),
        Map.entry("LoadMotor", new cim4j.LoadMotor()),
        Map.entry("LoadResponseCharacteristic", new cim4j.LoadResponseCharacteristic()),
        Map.entry("LoadStatic", new cim4j.LoadStatic()),
        Map.entry("LoadUserDefined", new cim4j.LoadUserDefined()),
        Map.entry("Location", new cim4j.Location()),
        Map.entry("Measurement", new cim4j.Measurement()),
        Map.entry("MeasurementValue", new cim4j.MeasurementValue()),
        Map.entry("MeasurementValueQuality", new cim4j.MeasurementValueQuality()),
        Map.entry("MeasurementValueSource", new cim4j.MeasurementValueSource()),
        Map.entry("MechLoad1", new cim4j.MechLoad1()),
        Map.entry("MechanicalLoadDynamics", new cim4j.MechanicalLoadDynamics()),
        Map.entry("MechanicalLoadUserDefined", new cim4j.MechanicalLoadUserDefined()),
        Map.entry("Money", new cim4j.Money()),
        Map.entry("MonthDay", new cim4j.MonthDay()),
        Map.entry("MutualCoupling", new cim4j.MutualCoupling()),
        Map.entry("NonConformLoad", new cim4j.NonConformLoad()),
        Map.entry("NonConformLoadGroup", new cim4j.NonConformLoadGroup()),
        Map.entry("NonConformLoadSchedule", new cim4j.NonConformLoadSchedule()),
        Map.entry("NonlinearShuntCompensator", new cim4j.NonlinearShuntCompensator()),
        Map.entry("NonlinearShuntCompensatorPoint", new cim4j.NonlinearShuntCompensatorPoint()),
        Map.entry("NuclearGeneratingUnit", new cim4j.NuclearGeneratingUnit()),
        Map.entry("OperationalLimit", new cim4j.OperationalLimit()),
        Map.entry("OperationalLimitDirectionKind", new cim4j.OperationalLimitDirectionKind()),
        Map.entry("OperationalLimitSet", new cim4j.OperationalLimitSet()),
        Map.entry("OperationalLimitType", new cim4j.OperationalLimitType()),
        Map.entry("OrientationKind", new cim4j.OrientationKind()),
        Map.entry("OverexcLim2", new cim4j.OverexcLim2()),
        Map.entry("OverexcLimIEEE", new cim4j.OverexcLimIEEE()),
        Map.entry("OverexcLimX1", new cim4j.OverexcLimX1()),
        Map.entry("OverexcLimX2", new cim4j.OverexcLimX2()),
        Map.entry("OverexcitationLimiterDynamics", new cim4j.OverexcitationLimiterDynamics()),
        Map.entry("OverexcitationLimiterUserDefined", new cim4j.OverexcitationLimiterUserDefined()),
        Map.entry("PFVArControllerType1Dynamics", new cim4j.PFVArControllerType1Dynamics()),
        Map.entry("PFVArControllerType1UserDefined", new cim4j.PFVArControllerType1UserDefined()),
        Map.entry("PFVArControllerType2Dynamics", new cim4j.PFVArControllerType2Dynamics()),
        Map.entry("PFVArControllerType2UserDefined", new cim4j.PFVArControllerType2UserDefined()),
        Map.entry("PFVArType1IEEEPFController", new cim4j.PFVArType1IEEEPFController()),
        Map.entry("PFVArType1IEEEVArController", new cim4j.PFVArType1IEEEVArController()),
        Map.entry("PFVArType2Common1", new cim4j.PFVArType2Common1()),
        Map.entry("PFVArType2IEEEPFController", new cim4j.PFVArType2IEEEPFController()),
        Map.entry("PFVArType2IEEEVArController", new cim4j.PFVArType2IEEEVArController()),
        Map.entry("PU", new cim4j.PU()),
        Map.entry("PerCent", new cim4j.PerCent()),
        Map.entry("PerLengthDCLineParameter", new cim4j.PerLengthDCLineParameter()),
        Map.entry("PetersenCoil", new cim4j.PetersenCoil()),
        Map.entry("PetersenCoilModeKind", new cim4j.PetersenCoilModeKind()),
        Map.entry("PhaseCode", new cim4j.PhaseCode()),
        Map.entry("PhaseTapChanger", new cim4j.PhaseTapChanger()),
        Map.entry("PhaseTapChangerAsymmetrical", new cim4j.PhaseTapChangerAsymmetrical()),
        Map.entry("PhaseTapChangerLinear", new cim4j.PhaseTapChangerLinear()),
        Map.entry("PhaseTapChangerNonLinear", new cim4j.PhaseTapChangerNonLinear()),
        Map.entry("PhaseTapChangerSymmetrical", new cim4j.PhaseTapChangerSymmetrical()),
        Map.entry("PhaseTapChangerTable", new cim4j.PhaseTapChangerTable()),
        Map.entry("PhaseTapChangerTablePoint", new cim4j.PhaseTapChangerTablePoint()),
        Map.entry("PhaseTapChangerTabular", new cim4j.PhaseTapChangerTabular()),
        Map.entry("PositionPoint", new cim4j.PositionPoint()),
        Map.entry("PowerSystemResource", new cim4j.PowerSystemResource()),
        Map.entry("PowerSystemStabilizerDynamics", new cim4j.PowerSystemStabilizerDynamics()),
        Map.entry("PowerSystemStabilizerUserDefined", new cim4j.PowerSystemStabilizerUserDefined()),
        Map.entry("PowerTransformer", new cim4j.PowerTransformer()),
        Map.entry("PowerTransformerEnd", new cim4j.PowerTransformerEnd()),
        Map.entry("ProprietaryParameterDynamics", new cim4j.ProprietaryParameterDynamics()),
        Map.entry("ProtectedSwitch", new cim4j.ProtectedSwitch()),
        Map.entry("Pss1", new cim4j.Pss1()),
        Map.entry("Pss1A", new cim4j.Pss1A()),
        Map.entry("Pss2B", new cim4j.Pss2B()),
        Map.entry("Pss2ST", new cim4j.Pss2ST()),
        Map.entry("Pss5", new cim4j.Pss5()),
        Map.entry("PssELIN2", new cim4j.PssELIN2()),
        Map.entry("PssIEEE1A", new cim4j.PssIEEE1A()),
        Map.entry("PssIEEE2B", new cim4j.PssIEEE2B()),
        Map.entry("PssIEEE3B", new cim4j.PssIEEE3B()),
        Map.entry("PssIEEE4B", new cim4j.PssIEEE4B()),
        Map.entry("PssPTIST1", new cim4j.PssPTIST1()),
        Map.entry("PssPTIST3", new cim4j.PssPTIST3()),
        Map.entry("PssSB4", new cim4j.PssSB4()),
        Map.entry("PssSH", new cim4j.PssSH()),
        Map.entry("PssSK", new cim4j.PssSK()),
        Map.entry("PssWECC", new cim4j.PssWECC()),
        Map.entry("Quality61850", new cim4j.Quality61850()),
        Map.entry("RaiseLowerCommand", new cim4j.RaiseLowerCommand()),
        Map.entry("RatioTapChanger", new cim4j.RatioTapChanger()),
        Map.entry("RatioTapChangerTable", new cim4j.RatioTapChangerTable()),
        Map.entry("RatioTapChangerTablePoint", new cim4j.RatioTapChangerTablePoint()),
        Map.entry("Reactance", new cim4j.Reactance()),
        Map.entry("ReactiveCapabilityCurve", new cim4j.ReactiveCapabilityCurve()),
        Map.entry("ReactivePower", new cim4j.ReactivePower()),
        Map.entry("RegularIntervalSchedule", new cim4j.RegularIntervalSchedule()),
        Map.entry("RegularTimePoint", new cim4j.RegularTimePoint()),
        Map.entry("RegulatingCondEq", new cim4j.RegulatingCondEq()),
        Map.entry("RegulatingControl", new cim4j.RegulatingControl()),
        Map.entry("RegulatingControlModeKind", new cim4j.RegulatingControlModeKind()),
        Map.entry("RegulationSchedule", new cim4j.RegulationSchedule()),
        Map.entry("RemoteInputSignal", new cim4j.RemoteInputSignal()),
        Map.entry("RemoteSignalKind", new cim4j.RemoteSignalKind()),
        Map.entry("ReportingGroup", new cim4j.ReportingGroup()),
        Map.entry("Resistance", new cim4j.Resistance()),
        Map.entry("ResistancePerLength", new cim4j.ResistancePerLength()),
        Map.entry("RotatingMachine", new cim4j.RotatingMachine()),
        Map.entry("RotatingMachineDynamics", new cim4j.RotatingMachineDynamics()),
        Map.entry("RotationSpeed", new cim4j.RotationSpeed()),
        Map.entry("RotorKind", new cim4j.RotorKind()),
        Map.entry("SVCControlMode", new cim4j.SVCControlMode()),
        Map.entry("Season", new cim4j.Season()),
        Map.entry("SeasonDayTypeSchedule", new cim4j.SeasonDayTypeSchedule()),
        Map.entry("Seconds", new cim4j.Seconds()),
        Map.entry("SeriesCompensator", new cim4j.SeriesCompensator()),
        Map.entry("SetPoint", new cim4j.SetPoint()),
        Map.entry("ShortCircuitRotorKind", new cim4j.ShortCircuitRotorKind()),
        Map.entry("ShuntCompensator", new cim4j.ShuntCompensator()),
        Map.entry("Simple_Float", new cim4j.Simple_Float()),
        Map.entry("SolarGeneratingUnit", new cim4j.SolarGeneratingUnit()),
        Map.entry("Source", new cim4j.Source()),
        Map.entry("StateVariablesVersion", new cim4j.StateVariablesVersion()),
        Map.entry("StaticLoadModelKind", new cim4j.StaticLoadModelKind()),
        Map.entry("StaticVarCompensator", new cim4j.StaticVarCompensator()),
        Map.entry("StationSupply", new cim4j.StationSupply()),
        Map.entry("SteadyStateHypothesisVersion", new cim4j.SteadyStateHypothesisVersion()),
        Map.entry("StringMeasurement", new cim4j.StringMeasurement()),
        Map.entry("StringMeasurementValue", new cim4j.StringMeasurementValue()),
        Map.entry("SubGeographicalRegion", new cim4j.SubGeographicalRegion()),
        Map.entry("SubLoadArea", new cim4j.SubLoadArea()),
        Map.entry("Substation", new cim4j.Substation()),
        Map.entry("Susceptance", new cim4j.Susceptance()),
        Map.entry("SvInjection", new cim4j.SvInjection()),
        Map.entry("SvPowerFlow", new cim4j.SvPowerFlow()),
        Map.entry("SvShuntCompensatorSections", new cim4j.SvShuntCompensatorSections()),
        Map.entry("SvStatus", new cim4j.SvStatus()),
        Map.entry("SvTapStep", new cim4j.SvTapStep()),
        Map.entry("SvVoltage", new cim4j.SvVoltage()),
        Map.entry("Switch", new cim4j.Switch()),
        Map.entry("SwitchSchedule", new cim4j.SwitchSchedule()),
        Map.entry("SynchronousMachine", new cim4j.SynchronousMachine()),
        Map.entry("SynchronousMachineDetailed", new cim4j.SynchronousMachineDetailed()),
        Map.entry("SynchronousMachineDynamics", new cim4j.SynchronousMachineDynamics()),
        Map.entry("SynchronousMachineEquivalentCircuit", new cim4j.SynchronousMachineEquivalentCircuit()),
        Map.entry("SynchronousMachineKind", new cim4j.SynchronousMachineKind()),
        Map.entry("SynchronousMachineModelKind", new cim4j.SynchronousMachineModelKind()),
        Map.entry("SynchronousMachineOperatingMode", new cim4j.SynchronousMachineOperatingMode()),
        Map.entry("SynchronousMachineSimplified", new cim4j.SynchronousMachineSimplified()),
        Map.entry("SynchronousMachineTimeConstantReactance", new cim4j.SynchronousMachineTimeConstantReactance()),
        Map.entry("SynchronousMachineUserDefined", new cim4j.SynchronousMachineUserDefined()),
        Map.entry("TapChanger", new cim4j.TapChanger()),
        Map.entry("TapChangerControl", new cim4j.TapChangerControl()),
        Map.entry("TapChangerTablePoint", new cim4j.TapChangerTablePoint()),
        Map.entry("TapSchedule", new cim4j.TapSchedule()),
        Map.entry("Temperature", new cim4j.Temperature()),
        Map.entry("Terminal", new cim4j.Terminal()),
        Map.entry("TextDiagramObject", new cim4j.TextDiagramObject()),
        Map.entry("ThermalGeneratingUnit", new cim4j.ThermalGeneratingUnit()),
        Map.entry("TieFlow", new cim4j.TieFlow()),
        Map.entry("TopologicalIsland", new cim4j.TopologicalIsland()),
        Map.entry("TopologicalNode", new cim4j.TopologicalNode()),
        Map.entry("TopologyBoundaryVersion", new cim4j.TopologyBoundaryVersion()),
        Map.entry("TopologyVersion", new cim4j.TopologyVersion()),
        Map.entry("TransformerControlMode", new cim4j.TransformerControlMode()),
        Map.entry("TransformerEnd", new cim4j.TransformerEnd()),
        Map.entry("TurbLCFB1", new cim4j.TurbLCFB1()),
        Map.entry("TurbineGovernorDynamics", new cim4j.TurbineGovernorDynamics()),
        Map.entry("TurbineGovernorUserDefined", new cim4j.TurbineGovernorUserDefined()),
        Map.entry("TurbineLoadControllerDynamics", new cim4j.TurbineLoadControllerDynamics()),
        Map.entry("TurbineLoadControllerUserDefined", new cim4j.TurbineLoadControllerUserDefined()),
        Map.entry("UnderexcLim2Simplified", new cim4j.UnderexcLim2Simplified()),
        Map.entry("UnderexcLimIEEE1", new cim4j.UnderexcLimIEEE1()),
        Map.entry("UnderexcLimIEEE2", new cim4j.UnderexcLimIEEE2()),
        Map.entry("UnderexcLimX1", new cim4j.UnderexcLimX1()),
        Map.entry("UnderexcLimX2", new cim4j.UnderexcLimX2()),
        Map.entry("UnderexcitationLimiterDynamics", new cim4j.UnderexcitationLimiterDynamics()),
        Map.entry("UnderexcitationLimiterUserDefined", new cim4j.UnderexcitationLimiterUserDefined()),
        Map.entry("UnitMultiplier", new cim4j.UnitMultiplier()),
        Map.entry("UnitSymbol", new cim4j.UnitSymbol()),
        Map.entry("VAdjIEEE", new cim4j.VAdjIEEE()),
        Map.entry("VCompIEEEType1", new cim4j.VCompIEEEType1()),
        Map.entry("VCompIEEEType2", new cim4j.VCompIEEEType2()),
        Map.entry("Validity", new cim4j.Validity()),
        Map.entry("ValueAliasSet", new cim4j.ValueAliasSet()),
        Map.entry("ValueToAlias", new cim4j.ValueToAlias()),
        Map.entry("VisibilityLayer", new cim4j.VisibilityLayer()),
        Map.entry("Voltage", new cim4j.Voltage()),
        Map.entry("VoltageAdjusterDynamics", new cim4j.VoltageAdjusterDynamics()),
        Map.entry("VoltageAdjusterUserDefined", new cim4j.VoltageAdjusterUserDefined()),
        Map.entry("VoltageCompensatorDynamics", new cim4j.VoltageCompensatorDynamics()),
        Map.entry("VoltageCompensatorUserDefined", new cim4j.VoltageCompensatorUserDefined()),
        Map.entry("VoltageLevel", new cim4j.VoltageLevel()),
        Map.entry("VoltageLimit", new cim4j.VoltageLimit()),
        Map.entry("VoltagePerReactivePower", new cim4j.VoltagePerReactivePower()),
        Map.entry("VolumeFlowRate", new cim4j.VolumeFlowRate()),
        Map.entry("VsCapabilityCurve", new cim4j.VsCapabilityCurve()),
        Map.entry("VsConverter", new cim4j.VsConverter()),
        Map.entry("VsPpccControlKind", new cim4j.VsPpccControlKind()),
        Map.entry("VsQpccControlKind", new cim4j.VsQpccControlKind()),
        Map.entry("WindAeroConstIEC", new cim4j.WindAeroConstIEC()),
        Map.entry("WindAeroLinearIEC", new cim4j.WindAeroLinearIEC()),
        Map.entry("WindContCurrLimIEC", new cim4j.WindContCurrLimIEC()),
        Map.entry("WindContPType3IEC", new cim4j.WindContPType3IEC()),
        Map.entry("WindContPType4aIEC", new cim4j.WindContPType4aIEC()),
        Map.entry("WindContPType4bIEC", new cim4j.WindContPType4bIEC()),
        Map.entry("WindContPitchAngleIEC", new cim4j.WindContPitchAngleIEC()),
        Map.entry("WindContQIEC", new cim4j.WindContQIEC()),
        Map.entry("WindContRotorRIEC", new cim4j.WindContRotorRIEC()),
        Map.entry("WindDynamicsLookupTable", new cim4j.WindDynamicsLookupTable()),
        Map.entry("WindGenTurbineType1IEC", new cim4j.WindGenTurbineType1IEC()),
        Map.entry("WindGenTurbineType2IEC", new cim4j.WindGenTurbineType2IEC()),
        Map.entry("WindGenTurbineType3IEC", new cim4j.WindGenTurbineType3IEC()),
        Map.entry("WindGenTurbineType3aIEC", new cim4j.WindGenTurbineType3aIEC()),
        Map.entry("WindGenTurbineType3bIEC", new cim4j.WindGenTurbineType3bIEC()),
        Map.entry("WindGenType4IEC", new cim4j.WindGenType4IEC()),
        Map.entry("WindGenUnitKind", new cim4j.WindGenUnitKind()),
        Map.entry("WindGeneratingUnit", new cim4j.WindGeneratingUnit()),
        Map.entry("WindLVRTQcontrolModesKind", new cim4j.WindLVRTQcontrolModesKind()),
        Map.entry("WindLookupTableFunctionKind", new cim4j.WindLookupTableFunctionKind()),
        Map.entry("WindMechIEC", new cim4j.WindMechIEC()),
        Map.entry("WindPitchContEmulIEC", new cim4j.WindPitchContEmulIEC()),
        Map.entry("WindPlantDynamics", new cim4j.WindPlantDynamics()),
        Map.entry("WindPlantFreqPcontrolIEC", new cim4j.WindPlantFreqPcontrolIEC()),
        Map.entry("WindPlantIEC", new cim4j.WindPlantIEC()),
        Map.entry("WindPlantReactiveControlIEC", new cim4j.WindPlantReactiveControlIEC()),
        Map.entry("WindPlantUserDefined", new cim4j.WindPlantUserDefined()),
        Map.entry("WindProtectionIEC", new cim4j.WindProtectionIEC()),
        Map.entry("WindQcontrolModesKind", new cim4j.WindQcontrolModesKind()),
        Map.entry("WindTurbineType1or2Dynamics", new cim4j.WindTurbineType1or2Dynamics()),
        Map.entry("WindTurbineType1or2IEC", new cim4j.WindTurbineType1or2IEC()),
        Map.entry("WindTurbineType3or4Dynamics", new cim4j.WindTurbineType3or4Dynamics()),
        Map.entry("WindTurbineType3or4IEC", new cim4j.WindTurbineType3or4IEC()),
        Map.entry("WindTurbineType4aIEC", new cim4j.WindTurbineType4aIEC()),
        Map.entry("WindTurbineType4bIEC", new cim4j.WindTurbineType4bIEC()),
        Map.entry("WindType1or2UserDefined", new cim4j.WindType1or2UserDefined()),
        Map.entry("WindType3or4UserDefined", new cim4j.WindType3or4UserDefined()),
        Map.entry("WindingConnection", new cim4j.WindingConnection())
    );
}
