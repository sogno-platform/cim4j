/*
Generated from the CGMES files via cimgen: https://github.com/sogno-platform/cimgen
*/

package cim4j;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.Function;

public final class CimClassMap {

    /**
     * Checks if the class name is known as CIM class.
     *
     * @param className The class name to check.
     * @return          Is this a CIM class?
     */
    public static boolean isCimClass(String className) {
        return CREATE_MAP.containsKey(className);
    }

    /**
     * Creates a new CIM object.
     *
     * @param className The class name of the new CIM object.
     * @param rdfid     The RDF ID of the CIM object read from rdf:ID or rdf:about.
     * @return          The new CIM object.
     */
    public static BaseClass createCimObject(String className, String rdfid) {
        var createFunction = CREATE_MAP.get(className);
        return createFunction.apply(rdfid);
    }

    /**
     * Creates a new CIM object (as object of the correct class).
     *
     * @param clazz The class of the new CIM object.
     * @param rdfid The RDF ID of the CIM object read from rdf:ID or rdf:about.
     * @return      The new CIM object.
     */
    @SuppressWarnings("unchecked")
    public static <T extends BaseClass> T createCimObject(Class<T> clazz, String rdfid) {
        var className = clazz.getSimpleName();
        return (T) createCimObject(className, rdfid);
    }

    /**
     * Map of CIM class name to constructor function which creates a new CIM object.
     */
    private static final Map<String, Function<String, BaseClass>> CREATE_MAP;
    static {
        var map = new LinkedHashMap<String, Function<String, BaseClass>>();

        map.put("ACDCConverter", rdfid -> new ACDCConverter(rdfid));
        map.put("ACDCConverterDCTerminal", rdfid -> new ACDCConverterDCTerminal(rdfid));
        map.put("ACDCTerminal", rdfid -> new ACDCTerminal(rdfid));
        map.put("ACLineSegment", rdfid -> new ACLineSegment(rdfid));
        map.put("Accumulator", rdfid -> new Accumulator(rdfid));
        map.put("AccumulatorLimit", rdfid -> new AccumulatorLimit(rdfid));
        map.put("AccumulatorLimitSet", rdfid -> new AccumulatorLimitSet(rdfid));
        map.put("AccumulatorReset", rdfid -> new AccumulatorReset(rdfid));
        map.put("AccumulatorValue", rdfid -> new AccumulatorValue(rdfid));
        map.put("ActivePowerLimit", rdfid -> new ActivePowerLimit(rdfid));
        map.put("Analog", rdfid -> new Analog(rdfid));
        map.put("AnalogControl", rdfid -> new AnalogControl(rdfid));
        map.put("AnalogLimit", rdfid -> new AnalogLimit(rdfid));
        map.put("AnalogLimitSet", rdfid -> new AnalogLimitSet(rdfid));
        map.put("AnalogValue", rdfid -> new AnalogValue(rdfid));
        map.put("ApparentPowerLimit", rdfid -> new ApparentPowerLimit(rdfid));
        map.put("AsynchronousMachine", rdfid -> new AsynchronousMachine(rdfid));
        map.put("AsynchronousMachineDynamics", rdfid -> new AsynchronousMachineDynamics(rdfid));
        map.put("AsynchronousMachineEquivalentCircuit", rdfid -> new AsynchronousMachineEquivalentCircuit(rdfid));
        map.put("AsynchronousMachineTimeConstantReactance", rdfid -> new AsynchronousMachineTimeConstantReactance(rdfid));
        map.put("AsynchronousMachineUserDefined", rdfid -> new AsynchronousMachineUserDefined(rdfid));
        map.put("AuxiliaryEquipment", rdfid -> new AuxiliaryEquipment(rdfid));
        map.put("BaseVoltage", rdfid -> new BaseVoltage(rdfid));
        map.put("BasicIntervalSchedule", rdfid -> new BasicIntervalSchedule(rdfid));
        map.put("BatteryUnit", rdfid -> new BatteryUnit(rdfid));
        map.put("Bay", rdfid -> new Bay(rdfid));
        map.put("BoundaryPoint", rdfid -> new BoundaryPoint(rdfid));
        map.put("Breaker", rdfid -> new Breaker(rdfid));
        map.put("BusNameMarker", rdfid -> new BusNameMarker(rdfid));
        map.put("BusbarSection", rdfid -> new BusbarSection(rdfid));
        map.put("CAESPlant", rdfid -> new CAESPlant(rdfid));
        map.put("CSCDynamics", rdfid -> new CSCDynamics(rdfid));
        map.put("CSCUserDefined", rdfid -> new CSCUserDefined(rdfid));
        map.put("Clamp", rdfid -> new Clamp(rdfid));
        map.put("CogenerationPlant", rdfid -> new CogenerationPlant(rdfid));
        map.put("CombinedCyclePlant", rdfid -> new CombinedCyclePlant(rdfid));
        map.put("Command", rdfid -> new Command(rdfid));
        map.put("ConductingEquipment", rdfid -> new ConductingEquipment(rdfid));
        map.put("Conductor", rdfid -> new Conductor(rdfid));
        map.put("ConformLoad", rdfid -> new ConformLoad(rdfid));
        map.put("ConformLoadGroup", rdfid -> new ConformLoadGroup(rdfid));
        map.put("ConformLoadSchedule", rdfid -> new ConformLoadSchedule(rdfid));
        map.put("ConnectivityNode", rdfid -> new ConnectivityNode(rdfid));
        map.put("ConnectivityNodeContainer", rdfid -> new ConnectivityNodeContainer(rdfid));
        map.put("Connector", rdfid -> new Connector(rdfid));
        map.put("Control", rdfid -> new Control(rdfid));
        map.put("ControlArea", rdfid -> new ControlArea(rdfid));
        map.put("ControlAreaGeneratingUnit", rdfid -> new ControlAreaGeneratingUnit(rdfid));
        map.put("CoordinateSystem", rdfid -> new CoordinateSystem(rdfid));
        map.put("CrossCompoundTurbineGovernorDynamics", rdfid -> new CrossCompoundTurbineGovernorDynamics(rdfid));
        map.put("CsConverter", rdfid -> new CsConverter(rdfid));
        map.put("CurrentLimit", rdfid -> new CurrentLimit(rdfid));
        map.put("CurrentTransformer", rdfid -> new CurrentTransformer(rdfid));
        map.put("Curve", rdfid -> new Curve(rdfid));
        map.put("CurveData", rdfid -> new CurveData(rdfid));
        map.put("Cut", rdfid -> new Cut(rdfid));
        map.put("DCBaseTerminal", rdfid -> new DCBaseTerminal(rdfid));
        map.put("DCBreaker", rdfid -> new DCBreaker(rdfid));
        map.put("DCBusbar", rdfid -> new DCBusbar(rdfid));
        map.put("DCChopper", rdfid -> new DCChopper(rdfid));
        map.put("DCConductingEquipment", rdfid -> new DCConductingEquipment(rdfid));
        map.put("DCConverterUnit", rdfid -> new DCConverterUnit(rdfid));
        map.put("DCDisconnector", rdfid -> new DCDisconnector(rdfid));
        map.put("DCEquipmentContainer", rdfid -> new DCEquipmentContainer(rdfid));
        map.put("DCGround", rdfid -> new DCGround(rdfid));
        map.put("DCLine", rdfid -> new DCLine(rdfid));
        map.put("DCLineSegment", rdfid -> new DCLineSegment(rdfid));
        map.put("DCNode", rdfid -> new DCNode(rdfid));
        map.put("DCSeriesDevice", rdfid -> new DCSeriesDevice(rdfid));
        map.put("DCShunt", rdfid -> new DCShunt(rdfid));
        map.put("DCSwitch", rdfid -> new DCSwitch(rdfid));
        map.put("DCTerminal", rdfid -> new DCTerminal(rdfid));
        map.put("DCTopologicalIsland", rdfid -> new DCTopologicalIsland(rdfid));
        map.put("DCTopologicalNode", rdfid -> new DCTopologicalNode(rdfid));
        map.put("DayType", rdfid -> new DayType(rdfid));
        map.put("Diagram", rdfid -> new Diagram(rdfid));
        map.put("DiagramObject", rdfid -> new DiagramObject(rdfid));
        map.put("DiagramObjectGluePoint", rdfid -> new DiagramObjectGluePoint(rdfid));
        map.put("DiagramObjectPoint", rdfid -> new DiagramObjectPoint(rdfid));
        map.put("DiagramObjectStyle", rdfid -> new DiagramObjectStyle(rdfid));
        map.put("DiagramStyle", rdfid -> new DiagramStyle(rdfid));
        map.put("DiscExcContIEEEDEC1A", rdfid -> new DiscExcContIEEEDEC1A(rdfid));
        map.put("DiscExcContIEEEDEC2A", rdfid -> new DiscExcContIEEEDEC2A(rdfid));
        map.put("DiscExcContIEEEDEC3A", rdfid -> new DiscExcContIEEEDEC3A(rdfid));
        map.put("DisconnectingCircuitBreaker", rdfid -> new DisconnectingCircuitBreaker(rdfid));
        map.put("Disconnector", rdfid -> new Disconnector(rdfid));
        map.put("DiscontinuousExcitationControlDynamics", rdfid -> new DiscontinuousExcitationControlDynamics(rdfid));
        map.put("DiscontinuousExcitationControlUserDefined", rdfid -> new DiscontinuousExcitationControlUserDefined(rdfid));
        map.put("Discrete", rdfid -> new Discrete(rdfid));
        map.put("DiscreteValue", rdfid -> new DiscreteValue(rdfid));
        map.put("DynamicsFunctionBlock", rdfid -> new DynamicsFunctionBlock(rdfid));
        map.put("EarthFaultCompensator", rdfid -> new EarthFaultCompensator(rdfid));
        map.put("EnergyArea", rdfid -> new EnergyArea(rdfid));
        map.put("EnergyConnection", rdfid -> new EnergyConnection(rdfid));
        map.put("EnergyConsumer", rdfid -> new EnergyConsumer(rdfid));
        map.put("EnergySchedulingType", rdfid -> new EnergySchedulingType(rdfid));
        map.put("EnergySource", rdfid -> new EnergySource(rdfid));
        map.put("Equipment", rdfid -> new Equipment(rdfid));
        map.put("EquipmentContainer", rdfid -> new EquipmentContainer(rdfid));
        map.put("EquivalentBranch", rdfid -> new EquivalentBranch(rdfid));
        map.put("EquivalentEquipment", rdfid -> new EquivalentEquipment(rdfid));
        map.put("EquivalentInjection", rdfid -> new EquivalentInjection(rdfid));
        map.put("EquivalentNetwork", rdfid -> new EquivalentNetwork(rdfid));
        map.put("EquivalentShunt", rdfid -> new EquivalentShunt(rdfid));
        map.put("ExcAC1A", rdfid -> new ExcAC1A(rdfid));
        map.put("ExcAC2A", rdfid -> new ExcAC2A(rdfid));
        map.put("ExcAC3A", rdfid -> new ExcAC3A(rdfid));
        map.put("ExcAC4A", rdfid -> new ExcAC4A(rdfid));
        map.put("ExcAC5A", rdfid -> new ExcAC5A(rdfid));
        map.put("ExcAC6A", rdfid -> new ExcAC6A(rdfid));
        map.put("ExcAC8B", rdfid -> new ExcAC8B(rdfid));
        map.put("ExcANS", rdfid -> new ExcANS(rdfid));
        map.put("ExcAVR1", rdfid -> new ExcAVR1(rdfid));
        map.put("ExcAVR2", rdfid -> new ExcAVR2(rdfid));
        map.put("ExcAVR3", rdfid -> new ExcAVR3(rdfid));
        map.put("ExcAVR4", rdfid -> new ExcAVR4(rdfid));
        map.put("ExcAVR5", rdfid -> new ExcAVR5(rdfid));
        map.put("ExcAVR7", rdfid -> new ExcAVR7(rdfid));
        map.put("ExcBBC", rdfid -> new ExcBBC(rdfid));
        map.put("ExcCZ", rdfid -> new ExcCZ(rdfid));
        map.put("ExcDC1A", rdfid -> new ExcDC1A(rdfid));
        map.put("ExcDC2A", rdfid -> new ExcDC2A(rdfid));
        map.put("ExcDC3A", rdfid -> new ExcDC3A(rdfid));
        map.put("ExcDC3A1", rdfid -> new ExcDC3A1(rdfid));
        map.put("ExcELIN1", rdfid -> new ExcELIN1(rdfid));
        map.put("ExcELIN2", rdfid -> new ExcELIN2(rdfid));
        map.put("ExcHU", rdfid -> new ExcHU(rdfid));
        map.put("ExcIEEEAC1A", rdfid -> new ExcIEEEAC1A(rdfid));
        map.put("ExcIEEEAC2A", rdfid -> new ExcIEEEAC2A(rdfid));
        map.put("ExcIEEEAC3A", rdfid -> new ExcIEEEAC3A(rdfid));
        map.put("ExcIEEEAC4A", rdfid -> new ExcIEEEAC4A(rdfid));
        map.put("ExcIEEEAC5A", rdfid -> new ExcIEEEAC5A(rdfid));
        map.put("ExcIEEEAC6A", rdfid -> new ExcIEEEAC6A(rdfid));
        map.put("ExcIEEEAC7B", rdfid -> new ExcIEEEAC7B(rdfid));
        map.put("ExcIEEEAC8B", rdfid -> new ExcIEEEAC8B(rdfid));
        map.put("ExcIEEEDC1A", rdfid -> new ExcIEEEDC1A(rdfid));
        map.put("ExcIEEEDC2A", rdfid -> new ExcIEEEDC2A(rdfid));
        map.put("ExcIEEEDC3A", rdfid -> new ExcIEEEDC3A(rdfid));
        map.put("ExcIEEEDC4B", rdfid -> new ExcIEEEDC4B(rdfid));
        map.put("ExcIEEEST1A", rdfid -> new ExcIEEEST1A(rdfid));
        map.put("ExcIEEEST2A", rdfid -> new ExcIEEEST2A(rdfid));
        map.put("ExcIEEEST3A", rdfid -> new ExcIEEEST3A(rdfid));
        map.put("ExcIEEEST4B", rdfid -> new ExcIEEEST4B(rdfid));
        map.put("ExcIEEEST5B", rdfid -> new ExcIEEEST5B(rdfid));
        map.put("ExcIEEEST6B", rdfid -> new ExcIEEEST6B(rdfid));
        map.put("ExcIEEEST7B", rdfid -> new ExcIEEEST7B(rdfid));
        map.put("ExcNI", rdfid -> new ExcNI(rdfid));
        map.put("ExcOEX3T", rdfid -> new ExcOEX3T(rdfid));
        map.put("ExcPIC", rdfid -> new ExcPIC(rdfid));
        map.put("ExcREXS", rdfid -> new ExcREXS(rdfid));
        map.put("ExcRQB", rdfid -> new ExcRQB(rdfid));
        map.put("ExcSCRX", rdfid -> new ExcSCRX(rdfid));
        map.put("ExcSEXS", rdfid -> new ExcSEXS(rdfid));
        map.put("ExcSK", rdfid -> new ExcSK(rdfid));
        map.put("ExcST1A", rdfid -> new ExcST1A(rdfid));
        map.put("ExcST2A", rdfid -> new ExcST2A(rdfid));
        map.put("ExcST3A", rdfid -> new ExcST3A(rdfid));
        map.put("ExcST4B", rdfid -> new ExcST4B(rdfid));
        map.put("ExcST6B", rdfid -> new ExcST6B(rdfid));
        map.put("ExcST7B", rdfid -> new ExcST7B(rdfid));
        map.put("ExcitationSystemDynamics", rdfid -> new ExcitationSystemDynamics(rdfid));
        map.put("ExcitationSystemUserDefined", rdfid -> new ExcitationSystemUserDefined(rdfid));
        map.put("ExternalNetworkInjection", rdfid -> new ExternalNetworkInjection(rdfid));
        map.put("FaultIndicator", rdfid -> new FaultIndicator(rdfid));
        map.put("FossilFuel", rdfid -> new FossilFuel(rdfid));
        map.put("Fuse", rdfid -> new Fuse(rdfid));
        map.put("GenICompensationForGenJ", rdfid -> new GenICompensationForGenJ(rdfid));
        map.put("GeneratingUnit", rdfid -> new GeneratingUnit(rdfid));
        map.put("GeographicalRegion", rdfid -> new GeographicalRegion(rdfid));
        map.put("GovCT1", rdfid -> new GovCT1(rdfid));
        map.put("GovCT2", rdfid -> new GovCT2(rdfid));
        map.put("GovGAST", rdfid -> new GovGAST(rdfid));
        map.put("GovGAST1", rdfid -> new GovGAST1(rdfid));
        map.put("GovGAST2", rdfid -> new GovGAST2(rdfid));
        map.put("GovGAST3", rdfid -> new GovGAST3(rdfid));
        map.put("GovGAST4", rdfid -> new GovGAST4(rdfid));
        map.put("GovGASTWD", rdfid -> new GovGASTWD(rdfid));
        map.put("GovHydro1", rdfid -> new GovHydro1(rdfid));
        map.put("GovHydro2", rdfid -> new GovHydro2(rdfid));
        map.put("GovHydro3", rdfid -> new GovHydro3(rdfid));
        map.put("GovHydro4", rdfid -> new GovHydro4(rdfid));
        map.put("GovHydroDD", rdfid -> new GovHydroDD(rdfid));
        map.put("GovHydroFrancis", rdfid -> new GovHydroFrancis(rdfid));
        map.put("GovHydroIEEE0", rdfid -> new GovHydroIEEE0(rdfid));
        map.put("GovHydroIEEE2", rdfid -> new GovHydroIEEE2(rdfid));
        map.put("GovHydroPID", rdfid -> new GovHydroPID(rdfid));
        map.put("GovHydroPID2", rdfid -> new GovHydroPID2(rdfid));
        map.put("GovHydroPelton", rdfid -> new GovHydroPelton(rdfid));
        map.put("GovHydroR", rdfid -> new GovHydroR(rdfid));
        map.put("GovHydroWEH", rdfid -> new GovHydroWEH(rdfid));
        map.put("GovHydroWPID", rdfid -> new GovHydroWPID(rdfid));
        map.put("GovSteam0", rdfid -> new GovSteam0(rdfid));
        map.put("GovSteam1", rdfid -> new GovSteam1(rdfid));
        map.put("GovSteam2", rdfid -> new GovSteam2(rdfid));
        map.put("GovSteamBB", rdfid -> new GovSteamBB(rdfid));
        map.put("GovSteamCC", rdfid -> new GovSteamCC(rdfid));
        map.put("GovSteamEU", rdfid -> new GovSteamEU(rdfid));
        map.put("GovSteamFV2", rdfid -> new GovSteamFV2(rdfid));
        map.put("GovSteamFV3", rdfid -> new GovSteamFV3(rdfid));
        map.put("GovSteamFV4", rdfid -> new GovSteamFV4(rdfid));
        map.put("GovSteamIEEE1", rdfid -> new GovSteamIEEE1(rdfid));
        map.put("GovSteamSGO", rdfid -> new GovSteamSGO(rdfid));
        map.put("GrossToNetActivePowerCurve", rdfid -> new GrossToNetActivePowerCurve(rdfid));
        map.put("Ground", rdfid -> new Ground(rdfid));
        map.put("GroundDisconnector", rdfid -> new GroundDisconnector(rdfid));
        map.put("GroundingImpedance", rdfid -> new GroundingImpedance(rdfid));
        map.put("HVDCDynamics", rdfid -> new HVDCDynamics(rdfid));
        map.put("HydroGeneratingUnit", rdfid -> new HydroGeneratingUnit(rdfid));
        map.put("HydroPowerPlant", rdfid -> new HydroPowerPlant(rdfid));
        map.put("HydroPump", rdfid -> new HydroPump(rdfid));
        map.put("IOPoint", rdfid -> new IOPoint(rdfid));
        map.put("IdentifiedObject", rdfid -> new IdentifiedObject(rdfid));
        map.put("Jumper", rdfid -> new Jumper(rdfid));
        map.put("Junction", rdfid -> new Junction(rdfid));
        map.put("Limit", rdfid -> new Limit(rdfid));
        map.put("LimitSet", rdfid -> new LimitSet(rdfid));
        map.put("Line", rdfid -> new Line(rdfid));
        map.put("LinearShuntCompensator", rdfid -> new LinearShuntCompensator(rdfid));
        map.put("LoadAggregate", rdfid -> new LoadAggregate(rdfid));
        map.put("LoadArea", rdfid -> new LoadArea(rdfid));
        map.put("LoadBreakSwitch", rdfid -> new LoadBreakSwitch(rdfid));
        map.put("LoadComposite", rdfid -> new LoadComposite(rdfid));
        map.put("LoadDynamics", rdfid -> new LoadDynamics(rdfid));
        map.put("LoadGenericNonLinear", rdfid -> new LoadGenericNonLinear(rdfid));
        map.put("LoadGroup", rdfid -> new LoadGroup(rdfid));
        map.put("LoadMotor", rdfid -> new LoadMotor(rdfid));
        map.put("LoadResponseCharacteristic", rdfid -> new LoadResponseCharacteristic(rdfid));
        map.put("LoadStatic", rdfid -> new LoadStatic(rdfid));
        map.put("LoadUserDefined", rdfid -> new LoadUserDefined(rdfid));
        map.put("Location", rdfid -> new Location(rdfid));
        map.put("Measurement", rdfid -> new Measurement(rdfid));
        map.put("MeasurementValue", rdfid -> new MeasurementValue(rdfid));
        map.put("MeasurementValueQuality", rdfid -> new MeasurementValueQuality(rdfid));
        map.put("MeasurementValueSource", rdfid -> new MeasurementValueSource(rdfid));
        map.put("MechLoad1", rdfid -> new MechLoad1(rdfid));
        map.put("MechanicalLoadDynamics", rdfid -> new MechanicalLoadDynamics(rdfid));
        map.put("MechanicalLoadUserDefined", rdfid -> new MechanicalLoadUserDefined(rdfid));
        map.put("MutualCoupling", rdfid -> new MutualCoupling(rdfid));
        map.put("NonConformLoad", rdfid -> new NonConformLoad(rdfid));
        map.put("NonConformLoadGroup", rdfid -> new NonConformLoadGroup(rdfid));
        map.put("NonConformLoadSchedule", rdfid -> new NonConformLoadSchedule(rdfid));
        map.put("NonlinearShuntCompensator", rdfid -> new NonlinearShuntCompensator(rdfid));
        map.put("NonlinearShuntCompensatorPoint", rdfid -> new NonlinearShuntCompensatorPoint(rdfid));
        map.put("NuclearGeneratingUnit", rdfid -> new NuclearGeneratingUnit(rdfid));
        map.put("OperationalLimit", rdfid -> new OperationalLimit(rdfid));
        map.put("OperationalLimitSet", rdfid -> new OperationalLimitSet(rdfid));
        map.put("OperationalLimitType", rdfid -> new OperationalLimitType(rdfid));
        map.put("OverexcLim2", rdfid -> new OverexcLim2(rdfid));
        map.put("OverexcLimIEEE", rdfid -> new OverexcLimIEEE(rdfid));
        map.put("OverexcLimX1", rdfid -> new OverexcLimX1(rdfid));
        map.put("OverexcLimX2", rdfid -> new OverexcLimX2(rdfid));
        map.put("OverexcitationLimiterDynamics", rdfid -> new OverexcitationLimiterDynamics(rdfid));
        map.put("OverexcitationLimiterUserDefined", rdfid -> new OverexcitationLimiterUserDefined(rdfid));
        map.put("PFVArControllerType1Dynamics", rdfid -> new PFVArControllerType1Dynamics(rdfid));
        map.put("PFVArControllerType1UserDefined", rdfid -> new PFVArControllerType1UserDefined(rdfid));
        map.put("PFVArControllerType2Dynamics", rdfid -> new PFVArControllerType2Dynamics(rdfid));
        map.put("PFVArControllerType2UserDefined", rdfid -> new PFVArControllerType2UserDefined(rdfid));
        map.put("PFVArType1IEEEPFController", rdfid -> new PFVArType1IEEEPFController(rdfid));
        map.put("PFVArType1IEEEVArController", rdfid -> new PFVArType1IEEEVArController(rdfid));
        map.put("PFVArType2Common1", rdfid -> new PFVArType2Common1(rdfid));
        map.put("PFVArType2IEEEPFController", rdfid -> new PFVArType2IEEEPFController(rdfid));
        map.put("PFVArType2IEEEVArController", rdfid -> new PFVArType2IEEEVArController(rdfid));
        map.put("PetersenCoil", rdfid -> new PetersenCoil(rdfid));
        map.put("PhaseTapChanger", rdfid -> new PhaseTapChanger(rdfid));
        map.put("PhaseTapChangerAsymmetrical", rdfid -> new PhaseTapChangerAsymmetrical(rdfid));
        map.put("PhaseTapChangerLinear", rdfid -> new PhaseTapChangerLinear(rdfid));
        map.put("PhaseTapChangerNonLinear", rdfid -> new PhaseTapChangerNonLinear(rdfid));
        map.put("PhaseTapChangerSymmetrical", rdfid -> new PhaseTapChangerSymmetrical(rdfid));
        map.put("PhaseTapChangerTable", rdfid -> new PhaseTapChangerTable(rdfid));
        map.put("PhaseTapChangerTablePoint", rdfid -> new PhaseTapChangerTablePoint(rdfid));
        map.put("PhaseTapChangerTabular", rdfid -> new PhaseTapChangerTabular(rdfid));
        map.put("PhotoVoltaicUnit", rdfid -> new PhotoVoltaicUnit(rdfid));
        map.put("PositionPoint", rdfid -> new PositionPoint(rdfid));
        map.put("PostLineSensor", rdfid -> new PostLineSensor(rdfid));
        map.put("PotentialTransformer", rdfid -> new PotentialTransformer(rdfid));
        map.put("PowerElectronicsConnection", rdfid -> new PowerElectronicsConnection(rdfid));
        map.put("PowerElectronicsUnit", rdfid -> new PowerElectronicsUnit(rdfid));
        map.put("PowerElectronicsWindUnit", rdfid -> new PowerElectronicsWindUnit(rdfid));
        map.put("PowerSystemResource", rdfid -> new PowerSystemResource(rdfid));
        map.put("PowerSystemStabilizerDynamics", rdfid -> new PowerSystemStabilizerDynamics(rdfid));
        map.put("PowerSystemStabilizerUserDefined", rdfid -> new PowerSystemStabilizerUserDefined(rdfid));
        map.put("PowerTransformer", rdfid -> new PowerTransformer(rdfid));
        map.put("PowerTransformerEnd", rdfid -> new PowerTransformerEnd(rdfid));
        map.put("ProprietaryParameterDynamics", rdfid -> new ProprietaryParameterDynamics(rdfid));
        map.put("ProtectedSwitch", rdfid -> new ProtectedSwitch(rdfid));
        map.put("Pss1", rdfid -> new Pss1(rdfid));
        map.put("Pss1A", rdfid -> new Pss1A(rdfid));
        map.put("Pss2B", rdfid -> new Pss2B(rdfid));
        map.put("Pss2ST", rdfid -> new Pss2ST(rdfid));
        map.put("Pss5", rdfid -> new Pss5(rdfid));
        map.put("PssELIN2", rdfid -> new PssELIN2(rdfid));
        map.put("PssIEEE1A", rdfid -> new PssIEEE1A(rdfid));
        map.put("PssIEEE2B", rdfid -> new PssIEEE2B(rdfid));
        map.put("PssIEEE3B", rdfid -> new PssIEEE3B(rdfid));
        map.put("PssIEEE4B", rdfid -> new PssIEEE4B(rdfid));
        map.put("PssPTIST1", rdfid -> new PssPTIST1(rdfid));
        map.put("PssPTIST3", rdfid -> new PssPTIST3(rdfid));
        map.put("PssRQB", rdfid -> new PssRQB(rdfid));
        map.put("PssSB4", rdfid -> new PssSB4(rdfid));
        map.put("PssSH", rdfid -> new PssSH(rdfid));
        map.put("PssSK", rdfid -> new PssSK(rdfid));
        map.put("PssSTAB2A", rdfid -> new PssSTAB2A(rdfid));
        map.put("PssWECC", rdfid -> new PssWECC(rdfid));
        map.put("Quality61850", rdfid -> new Quality61850(rdfid));
        map.put("RaiseLowerCommand", rdfid -> new RaiseLowerCommand(rdfid));
        map.put("RatioTapChanger", rdfid -> new RatioTapChanger(rdfid));
        map.put("RatioTapChangerTable", rdfid -> new RatioTapChangerTable(rdfid));
        map.put("RatioTapChangerTablePoint", rdfid -> new RatioTapChangerTablePoint(rdfid));
        map.put("ReactiveCapabilityCurve", rdfid -> new ReactiveCapabilityCurve(rdfid));
        map.put("RegularIntervalSchedule", rdfid -> new RegularIntervalSchedule(rdfid));
        map.put("RegularTimePoint", rdfid -> new RegularTimePoint(rdfid));
        map.put("RegulatingCondEq", rdfid -> new RegulatingCondEq(rdfid));
        map.put("RegulatingControl", rdfid -> new RegulatingControl(rdfid));
        map.put("RegulationSchedule", rdfid -> new RegulationSchedule(rdfid));
        map.put("RemoteInputSignal", rdfid -> new RemoteInputSignal(rdfid));
        map.put("ReportingGroup", rdfid -> new ReportingGroup(rdfid));
        map.put("RotatingMachine", rdfid -> new RotatingMachine(rdfid));
        map.put("RotatingMachineDynamics", rdfid -> new RotatingMachineDynamics(rdfid));
        map.put("SVCUserDefined", rdfid -> new SVCUserDefined(rdfid));
        map.put("Season", rdfid -> new Season(rdfid));
        map.put("SeasonDayTypeSchedule", rdfid -> new SeasonDayTypeSchedule(rdfid));
        map.put("Sensor", rdfid -> new Sensor(rdfid));
        map.put("SeriesCompensator", rdfid -> new SeriesCompensator(rdfid));
        map.put("ServiceLocation", rdfid -> new ServiceLocation(rdfid));
        map.put("SetPoint", rdfid -> new SetPoint(rdfid));
        map.put("ShuntCompensator", rdfid -> new ShuntCompensator(rdfid));
        map.put("SolarGeneratingUnit", rdfid -> new SolarGeneratingUnit(rdfid));
        map.put("SolarPowerPlant", rdfid -> new SolarPowerPlant(rdfid));
        map.put("StaticVarCompensator", rdfid -> new StaticVarCompensator(rdfid));
        map.put("StaticVarCompensatorDynamics", rdfid -> new StaticVarCompensatorDynamics(rdfid));
        map.put("StationSupply", rdfid -> new StationSupply(rdfid));
        map.put("Status", rdfid -> new Status(rdfid));
        map.put("StreetAddress", rdfid -> new StreetAddress(rdfid));
        map.put("StreetDetail", rdfid -> new StreetDetail(rdfid));
        map.put("StringMeasurement", rdfid -> new StringMeasurement(rdfid));
        map.put("StringMeasurementValue", rdfid -> new StringMeasurementValue(rdfid));
        map.put("SubGeographicalRegion", rdfid -> new SubGeographicalRegion(rdfid));
        map.put("SubLoadArea", rdfid -> new SubLoadArea(rdfid));
        map.put("Substation", rdfid -> new Substation(rdfid));
        map.put("SurgeArrester", rdfid -> new SurgeArrester(rdfid));
        map.put("SvInjection", rdfid -> new SvInjection(rdfid));
        map.put("SvPowerFlow", rdfid -> new SvPowerFlow(rdfid));
        map.put("SvShuntCompensatorSections", rdfid -> new SvShuntCompensatorSections(rdfid));
        map.put("SvStatus", rdfid -> new SvStatus(rdfid));
        map.put("SvSwitch", rdfid -> new SvSwitch(rdfid));
        map.put("SvTapStep", rdfid -> new SvTapStep(rdfid));
        map.put("SvVoltage", rdfid -> new SvVoltage(rdfid));
        map.put("Switch", rdfid -> new Switch(rdfid));
        map.put("SwitchSchedule", rdfid -> new SwitchSchedule(rdfid));
        map.put("SynchronousMachine", rdfid -> new SynchronousMachine(rdfid));
        map.put("SynchronousMachineDetailed", rdfid -> new SynchronousMachineDetailed(rdfid));
        map.put("SynchronousMachineDynamics", rdfid -> new SynchronousMachineDynamics(rdfid));
        map.put("SynchronousMachineEquivalentCircuit", rdfid -> new SynchronousMachineEquivalentCircuit(rdfid));
        map.put("SynchronousMachineSimplified", rdfid -> new SynchronousMachineSimplified(rdfid));
        map.put("SynchronousMachineTimeConstantReactance", rdfid -> new SynchronousMachineTimeConstantReactance(rdfid));
        map.put("SynchronousMachineUserDefined", rdfid -> new SynchronousMachineUserDefined(rdfid));
        map.put("TapChanger", rdfid -> new TapChanger(rdfid));
        map.put("TapChangerControl", rdfid -> new TapChangerControl(rdfid));
        map.put("TapChangerTablePoint", rdfid -> new TapChangerTablePoint(rdfid));
        map.put("TapSchedule", rdfid -> new TapSchedule(rdfid));
        map.put("Terminal", rdfid -> new Terminal(rdfid));
        map.put("TextDiagramObject", rdfid -> new TextDiagramObject(rdfid));
        map.put("ThermalGeneratingUnit", rdfid -> new ThermalGeneratingUnit(rdfid));
        map.put("TieFlow", rdfid -> new TieFlow(rdfid));
        map.put("TopologicalIsland", rdfid -> new TopologicalIsland(rdfid));
        map.put("TopologicalNode", rdfid -> new TopologicalNode(rdfid));
        map.put("TownDetail", rdfid -> new TownDetail(rdfid));
        map.put("TransformerEnd", rdfid -> new TransformerEnd(rdfid));
        map.put("TurbLCFB1", rdfid -> new TurbLCFB1(rdfid));
        map.put("TurbineGovernorDynamics", rdfid -> new TurbineGovernorDynamics(rdfid));
        map.put("TurbineGovernorUserDefined", rdfid -> new TurbineGovernorUserDefined(rdfid));
        map.put("TurbineLoadControllerDynamics", rdfid -> new TurbineLoadControllerDynamics(rdfid));
        map.put("TurbineLoadControllerUserDefined", rdfid -> new TurbineLoadControllerUserDefined(rdfid));
        map.put("UnderexcLim2Simplified", rdfid -> new UnderexcLim2Simplified(rdfid));
        map.put("UnderexcLimIEEE1", rdfid -> new UnderexcLimIEEE1(rdfid));
        map.put("UnderexcLimIEEE2", rdfid -> new UnderexcLimIEEE2(rdfid));
        map.put("UnderexcLimX1", rdfid -> new UnderexcLimX1(rdfid));
        map.put("UnderexcLimX2", rdfid -> new UnderexcLimX2(rdfid));
        map.put("UnderexcitationLimiterDynamics", rdfid -> new UnderexcitationLimiterDynamics(rdfid));
        map.put("UnderexcitationLimiterUserDefined", rdfid -> new UnderexcitationLimiterUserDefined(rdfid));
        map.put("VAdjIEEE", rdfid -> new VAdjIEEE(rdfid));
        map.put("VCompIEEEType1", rdfid -> new VCompIEEEType1(rdfid));
        map.put("VCompIEEEType2", rdfid -> new VCompIEEEType2(rdfid));
        map.put("VSCDynamics", rdfid -> new VSCDynamics(rdfid));
        map.put("VSCUserDefined", rdfid -> new VSCUserDefined(rdfid));
        map.put("ValueAliasSet", rdfid -> new ValueAliasSet(rdfid));
        map.put("ValueToAlias", rdfid -> new ValueToAlias(rdfid));
        map.put("VisibilityLayer", rdfid -> new VisibilityLayer(rdfid));
        map.put("VoltageAdjusterDynamics", rdfid -> new VoltageAdjusterDynamics(rdfid));
        map.put("VoltageAdjusterUserDefined", rdfid -> new VoltageAdjusterUserDefined(rdfid));
        map.put("VoltageCompensatorDynamics", rdfid -> new VoltageCompensatorDynamics(rdfid));
        map.put("VoltageCompensatorUserDefined", rdfid -> new VoltageCompensatorUserDefined(rdfid));
        map.put("VoltageLevel", rdfid -> new VoltageLevel(rdfid));
        map.put("VoltageLimit", rdfid -> new VoltageLimit(rdfid));
        map.put("VsCapabilityCurve", rdfid -> new VsCapabilityCurve(rdfid));
        map.put("VsConverter", rdfid -> new VsConverter(rdfid));
        map.put("WaveTrap", rdfid -> new WaveTrap(rdfid));
        map.put("WindAeroConstIEC", rdfid -> new WindAeroConstIEC(rdfid));
        map.put("WindAeroOneDimIEC", rdfid -> new WindAeroOneDimIEC(rdfid));
        map.put("WindAeroTwoDimIEC", rdfid -> new WindAeroTwoDimIEC(rdfid));
        map.put("WindContCurrLimIEC", rdfid -> new WindContCurrLimIEC(rdfid));
        map.put("WindContPType3IEC", rdfid -> new WindContPType3IEC(rdfid));
        map.put("WindContPType4aIEC", rdfid -> new WindContPType4aIEC(rdfid));
        map.put("WindContPType4bIEC", rdfid -> new WindContPType4bIEC(rdfid));
        map.put("WindContPitchAngleIEC", rdfid -> new WindContPitchAngleIEC(rdfid));
        map.put("WindContQIEC", rdfid -> new WindContQIEC(rdfid));
        map.put("WindContQLimIEC", rdfid -> new WindContQLimIEC(rdfid));
        map.put("WindContQPQULimIEC", rdfid -> new WindContQPQULimIEC(rdfid));
        map.put("WindContRotorRIEC", rdfid -> new WindContRotorRIEC(rdfid));
        map.put("WindDynamicsLookupTable", rdfid -> new WindDynamicsLookupTable(rdfid));
        map.put("WindGenTurbineType1aIEC", rdfid -> new WindGenTurbineType1aIEC(rdfid));
        map.put("WindGenTurbineType1bIEC", rdfid -> new WindGenTurbineType1bIEC(rdfid));
        map.put("WindGenTurbineType2IEC", rdfid -> new WindGenTurbineType2IEC(rdfid));
        map.put("WindGenType3IEC", rdfid -> new WindGenType3IEC(rdfid));
        map.put("WindGenType3aIEC", rdfid -> new WindGenType3aIEC(rdfid));
        map.put("WindGenType3bIEC", rdfid -> new WindGenType3bIEC(rdfid));
        map.put("WindGenType4IEC", rdfid -> new WindGenType4IEC(rdfid));
        map.put("WindGeneratingUnit", rdfid -> new WindGeneratingUnit(rdfid));
        map.put("WindMechIEC", rdfid -> new WindMechIEC(rdfid));
        map.put("WindPitchContPowerIEC", rdfid -> new WindPitchContPowerIEC(rdfid));
        map.put("WindPlantDynamics", rdfid -> new WindPlantDynamics(rdfid));
        map.put("WindPlantFreqPcontrolIEC", rdfid -> new WindPlantFreqPcontrolIEC(rdfid));
        map.put("WindPlantIEC", rdfid -> new WindPlantIEC(rdfid));
        map.put("WindPlantReactiveControlIEC", rdfid -> new WindPlantReactiveControlIEC(rdfid));
        map.put("WindPlantUserDefined", rdfid -> new WindPlantUserDefined(rdfid));
        map.put("WindPowerPlant", rdfid -> new WindPowerPlant(rdfid));
        map.put("WindProtectionIEC", rdfid -> new WindProtectionIEC(rdfid));
        map.put("WindRefFrameRotIEC", rdfid -> new WindRefFrameRotIEC(rdfid));
        map.put("WindTurbineType1or2Dynamics", rdfid -> new WindTurbineType1or2Dynamics(rdfid));
        map.put("WindTurbineType1or2IEC", rdfid -> new WindTurbineType1or2IEC(rdfid));
        map.put("WindTurbineType3IEC", rdfid -> new WindTurbineType3IEC(rdfid));
        map.put("WindTurbineType3or4Dynamics", rdfid -> new WindTurbineType3or4Dynamics(rdfid));
        map.put("WindTurbineType3or4IEC", rdfid -> new WindTurbineType3or4IEC(rdfid));
        map.put("WindTurbineType4IEC", rdfid -> new WindTurbineType4IEC(rdfid));
        map.put("WindTurbineType4aIEC", rdfid -> new WindTurbineType4aIEC(rdfid));
        map.put("WindTurbineType4bIEC", rdfid -> new WindTurbineType4bIEC(rdfid));
        map.put("WindType1or2UserDefined", rdfid -> new WindType1or2UserDefined(rdfid));
        map.put("WindType3or4UserDefined", rdfid -> new WindType3or4UserDefined(rdfid));
        map.put("WorkLocation", rdfid -> new WorkLocation(rdfid));

        CREATE_MAP = Collections.unmodifiableMap(map);
    }
}
